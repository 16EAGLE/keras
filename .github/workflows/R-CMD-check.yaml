on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '51 3 * * Fri'

name: R-CMD-check

defaults:
  run:
    shell: Rscript {0}

jobs:
  R-CMD-check:
    name: ${{ matrix.os }}, py-${{ matrix.python }}, R-${{ matrix.r }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:

          - {os: 'ubuntu-latest' , python: '3.9' , r: 'release'}
          - {os: 'ubuntu-latest' , python: '3.10', r: 'release'}
          - {os: 'ubuntu-latest' , python: '3.11', r: 'release'}
          - {os: 'ubuntu-latest' , python: '3.12', r: 'release'}

          ## the happy path - default everything
          # - {os: 'ubuntu-latest' , tf: 'default', r: 'release'}
          # - {os: 'windows-latest', tf: 'default', r: 'release'}
          # - {os: 'macOS-latest'  , tf: 'default', r: 'release'}
          #
          # ## old R versions
          # - {os: 'windows-latest', tf: 'default', r: 'oldrel'}
          # - {os: 'macOS-latest'  , tf: 'default', r: 'oldrel'}
          # - {os: 'ubuntu-latest' , tf: 'default', r: 'oldrel'}
          # - {os: 'ubuntu-latest' , tf: 'default', r: 'oldrel-1'}
          # - {os: 'ubuntu-latest' , tf: 'default', r: 'oldrel-2'}
          # - {os: 'ubuntu-20.04'  , tf: 'default', r: '3.6'} # default R in ubuntu-20.04
          #
          # ## release keras/tf version (if different from 'default')
          # # - {os: 'ubuntu-latest' , tf: 'release', r: 'release'}
          # # - {os: 'windows-latest', tf: 'release', r: 'release'}
          # # - {os: 'macOS-latest'  , tf: 'release', r: 'release'}
          #
          # ## old keras/tf versions
          # - {os: 'ubuntu-latest', tf: '2.14', r: 'release'}
          # - {os: 'ubuntu-latest', tf: '2.13', r: 'release'}
          # - {os: 'ubuntu-latest', tf: '2.12', r: 'release'}
          # - {os: 'ubuntu-latest', tf: '2.11', r: 'release'}
          # - {os: 'ubuntu-latest', tf: '2.9' , r: 'release'}

          # these are allowed to fail
          # - {os: 'ubuntu-latest', tf: '2.14.0rc1', r: 'release'}
          # - {os: 'ubuntu-20.04', tf: 'default', r: 'devel'}
          # - {os: 'ubuntu-20.04', tf: 'nightly' , r: 'release'}

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.tf == 'nightly' || contains(matrix.tf, 'rc') || matrix.r == 'devel' }}
    env:
      R_KEEP_PKG_SOURCE: yes
      # R_REMOTES_NO_ERRORS_FROM_WARNINGS: 'true'
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:

      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        id: setup-r
        with:
          r-version: ${{ matrix.r }}
          use-public-rspm: true
          Ncpus: '2L'

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, local::.
          cache-version: 1
          upgrade: 'TRUE'

      - name: Install Keras
        run: keras::install_keras(python_version = '${{ matrix.python }}')

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
