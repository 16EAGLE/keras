% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ops.R
\name{k_scatter_update}
\alias{k_scatter_update}
\title{Update inputs via updates at scattered (sparse) indices.}
\usage{
k_scatter_update(inputs, indices, updates)
}
\arguments{
\item{inputs}{A tensor, the tensor to be updated.}

\item{indices}{A tensor or list/tuple of shape \verb{(N, inputs.ndim)}, specifying
indices to update. \code{N} is the number of indices to update, must be
equal to the first dimension of \code{updates}.}

\item{updates}{A tensor, the new values to be put to \code{inputs} at \code{indices}.}
}
\description{
At a high level, this operation does \code{inputs[indices] = updates}.
Assume \code{inputs} is a tensor of shape \verb{(D0, D1, ..., Dn)}, there are 2 main
usages of \code{scatter_update}.
\enumerate{
\item \code{indices} is a 2D tensor of shape \verb{(num_updates, n)}, where \code{num_updates}
is the number of updates to perform, and \code{updates} is a 1D tensor of
shape \verb{(num_updates,)}. For example, if \code{inputs} is \verb{zeros((4, 4, 4))},
and we want to update \code{inputs[1, 2, 3]} and \code{inputs[0, 1, 3]} as 1, then
we can use:
}

\if{html}{\out{<div class="sourceCode python">}}\preformatted{inputs = np.zeros((4, 4, 4))
indices = [[1, 2, 3], [0, 1, 3]]
updates = np.array([1., 1.])
inputs = keras_core.ops.scatter_update(inputs, indices, updates)
}\if{html}{\out{</div>}}

2 \code{indices} is a 2D tensor of shape \verb{(num_updates, k)}, where \code{num_updates}
is the number of updates to perform, and \code{k} (\code{k < n}) is the size of
each index in \code{indices}. \code{updates} is a \code{n - k}-D tensor of shape
\verb{(num_updates, inputs.shape[k:])}. For example, if
\verb{inputs = np.zeros((4, 4, 4))}, and we want to update \verb{inputs[1, 2, :]}
and \verb{inputs[2, 3, :]} as \verb{[1, 1, 1, 1]}, then \code{indices} would have shape
\verb{(num_updates, 2)} (\code{k = 2}), and \code{updates} would have shape
\verb{(num_updates, 4)} (\verb{inputs.shape[2:] = 4}). See the code below:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{inputs = np.zeros((4, 4, 4))
indices = [[1, 2], [2, 3]]
updates = np.array([[1., 1., 1, 1,], [1., 1., 1, 1,])
inputs = keras_core.ops.scatter_update(inputs, indices, updates)
}\if{html}{\out{</div>}}
}
\section{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{A tensor, has the same shape and dtype as `inputs`.
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/ops/scatter_update}
}
}
