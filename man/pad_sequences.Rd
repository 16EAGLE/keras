% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-preprocessing.R
\name{pad_sequences}
\alias{pad_sequences}
\title{Pads sequences to the same length.}
\usage{
pad_sequences(
  sequences,
  maxlen = NULL,
  dtype = "int32",
  padding = "pre",
  truncating = "pre",
  value = 0
)
}
\arguments{
\item{sequences}{List of sequences (each sequence is a list of integers).}

\item{maxlen}{Optional Int, maximum length of all sequences. If not provided,
sequences will be padded to the length of the longest individual
sequence.}

\item{dtype}{(Optional, defaults to \code{"int32"}). Type of the output sequences.
To pad sequences with variable length strings, you can use \code{object}.}

\item{padding}{String, "pre" or "post" (optional, defaults to \code{"pre"}):
pad either before or after each sequence.}

\item{truncating}{String, "pre" or "post" (optional, defaults to \code{"pre"}):
remove values from sequences larger than
\code{maxlen}, either at the beginning or at the end of the sequences.}

\item{value}{Float or String, padding value. (Optional, defaults to 0.)}
}
\description{
This function transforms a list (of length \code{num_samples})
of sequences (lists of integers)
into a 2D NumPy array of shape \verb{(num_samples, num_timesteps)}.
\code{num_timesteps} is either the \code{maxlen} argument if provided,
or the length of the longest sequence in the list.

Sequences that are shorter than \code{num_timesteps}
are padded with \code{value} until they are \code{num_timesteps} long.

Sequences longer than \code{num_timesteps} are truncated
so that they fit the desired length.

The position where padding or truncation happens is determined by
the arguments \code{padding} and \code{truncating}, respectively.
Pre-padding or removing values from the beginning of the sequence is the
default.

\if{html}{\out{<div class="sourceCode python">}}\preformatted{sequence = [[1], [2, 3], [4, 5, 6]]
keras.utils.pad_sequences(sequence)
# array([[0, 0, 1],
#        [0, 2, 3],
#        [4, 5, 6]], dtype=int32)
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode python">}}\preformatted{keras.utils.pad_sequences(sequence, value=-1)
# array([[-1, -1,  1],
#        [-1,  2,  3],
#        [ 4,  5,  6]], dtype=int32)
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode python">}}\preformatted{keras.utils.pad_sequences(sequence, padding='post')
# array([[1, 0, 0],
#        [2, 3, 0],
#        [4, 5, 6]], dtype=int32)
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode python">}}\preformatted{keras.utils.pad_sequences(sequence, maxlen=2)
# array([[0, 1],
#        [2, 3],
#        [5, 6]], dtype=int32)
}\if{html}{\out{</div>}}
}
\section{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{NumPy array with shape `(len(sequences), maxlen)`
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/preprocessing/sequence/pad_sequences}
}
}
