% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ops.R
\name{k_einsum}
\alias{k_einsum}
\title{Evaluates the Einstein summation convention on the operands.}
\usage{
k_einsum(subscripts, ...)
}
\arguments{
\item{subscripts}{Specifies the subscripts for summation as comma separated
list of subscript labels. An implicit (classical Einstein
summation) calculation is performed unless the explicit indicator
\verb{->} is included as well as subscript labels of the precise
output form.}

\item{operands}{The operands to compute the Einstein sum of.}
}
\description{
Evaluates the Einstein summation convention on the operands.
}
\section{Returns}{
The calculation based on the Einstein summation convention.
}

\section{Examples}{
\if{html}{\out{<div class="sourceCode python">}}\preformatted{from keras_core import ops
a = ops.arange(25).reshape(5, 5)
b = ops.arange(5)
c = ops.arange(6).reshape(2, 3)
}\if{html}{\out{</div>}}

Trace of a matrix:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{ops.einsum("ii", a)
# 60
ops.einsum(a, [0, 0])
# 60
ops.trace(a)
# 60
}\if{html}{\out{</div>}}

Extract the diagonal:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{ops.einsum("ii -> i", a)
# array([ 0,  6, 12, 18, 24])
ops.einsum(a, [0, 0], [0])
# array([ 0,  6, 12, 18, 24])
ops.diag(a)
# array([ 0,  6, 12, 18, 24])
}\if{html}{\out{</div>}}

Sum over an axis:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{ops.einsum("ij -> i", a)
# array([ 10,  35,  60,  85, 110])
ops.einsum(a, [0, 1], [0])
# array([ 10,  35,  60,  85, 110])
ops.sum(a, axis=1)
# array([ 10,  35,  60,  85, 110])
}\if{html}{\out{</div>}}

For higher dimensional tensors summing a single axis can be done
with ellipsis:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{ops.einsum("...j -> ...", a)
# array([ 10,  35,  60,  85, 110])
np.einsum(a, [..., 1], [...])
# array([ 10,  35,  60,  85, 110])
}\if{html}{\out{</div>}}

Compute a matrix transpose or reorder any number of axes:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{ops.einsum("ji", c)
# array([[0, 3],
#        [1, 4],
#        [2, 5]])
ops.einsum("ij -> ji", c)
# array([[0, 3],
#        [1, 4],
#        [2, 5]])
ops.einsum(c, [1, 0])
# array([[0, 3],
#        [1, 4],
#        [2, 5]])
ops.transpose(c)
# array([[0, 3],
#        [1, 4],
#        [2, 5]])
}\if{html}{\out{</div>}}

Matrix vector multiplication:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{ops.einsum("ij, j", a, b)
# array([ 30,  80, 130, 180, 230])
ops.einsum(a, [0, 1], b, [1])
# array([ 30,  80, 130, 180, 230])
ops.einsum("...j, j", a, b)
# array([ 30,  80, 130, 180, 230])
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/ops/einsum}
}
}
