% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-layers-reshaping.R
\name{layer_zero_padding_3d}
\alias{layer_zero_padding_3d}
\title{Zero-padding layer for 3D data (spatial or spatio-temporal).}
\usage{
layer_zero_padding_3d(
  object,
  padding = list(list(1L, 1L), list(1L, 1L), list(1L, 1L)),
  data_format = NULL,
  ...
)
}
\arguments{
\item{object}{Object to compose the layer with. A tensor, array, or sequential model.}

\item{padding}{Int, or list of 3 ints, or list of 3 lists of 2 ints.
\itemize{
\item If int: the same symmetric padding is applied to depth, height,
and width.
\item If list of 3 ints: interpreted as three different symmetric
padding values for depth, height, and width:
\verb{(symmetric_dim1_pad, symmetric_dim2_pad, symmetric_dim3_pad)}.
\item If list of 3 lists of 2 ints: interpreted as
\verb{((left_dim1_pad, right_dim1_pad), (left_dim2_pad, right_dim2_pad), (left_dim3_pad, right_dim3_pad))}.
}}

\item{data_format}{A string, one of \code{"channels_last"} (default) or
\code{"channels_first"}. The ordering of the dimensions in the inputs.
\code{"channels_last"} corresponds to inputs with shape
\verb{(batch_size, spatial_dim1, spatial_dim2, spatial_dim3, channels)}
while \code{"channels_first"} corresponds to inputs with shape
\verb{(batch_size, channels, spatial_dim1, spatial_dim2, spatial_dim3)}.
When unspecified, uses \code{image_data_format} value found in your Keras
config file at \verb{~/.keras/keras.json} (if exists). Defaults to
\code{"channels_last"}.}

\item{...}{Passed on to the Python callable}
}
\description{
Zero-padding layer for 3D data (spatial or spatio-temporal).
}
\section{Examples}{
\if{html}{\out{<div class="sourceCode r">}}\preformatted{input_shape <- c(1, 1, 2, 2, 3)
x <- k_reshape(seq_len(prod(input_shape)), input_shape)
x
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode">}}\preformatted{## tf.Tensor(
## [[[[[ 1  2  3]
##     [ 4  5  6]]
##
##    [[ 7  8  9]
##     [10 11 12]]]]], shape=(1, 1, 2, 2, 3), dtype=int64)
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{y <- layer_zero_padding_3d(x, padding = 2)
y$shape
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode">}}\preformatted{## TensorShape([1, 5, 6, 6, 3])
}\if{html}{\out{</div>}}
}

\section{Input Shape}{
5D tensor with shape:
\itemize{
\item If \code{data_format} is \code{"channels_last"}:
\verb{(batch_size, first_axis_to_pad, second_axis_to_pad, third_axis_to_pad, depth)}
\item If \code{data_format} is \code{"channels_first"}:
\verb{(batch_size, depth, first_axis_to_pad, second_axis_to_pad, third_axis_to_pad)}
}
}

\section{Output Shape}{
5D tensor with shape:
\itemize{
\item If \code{data_format} is \code{"channels_last"}:
\verb{(batch_size, first_padded_axis, second_padded_axis, third_axis_to_pad, depth)}
\item If \code{data_format} is \code{"channels_first"}:
\verb{(batch_size, depth, first_padded_axis, second_padded_axis, third_axis_to_pad)}
}
}

\seealso{
\itemize{
\item \url{https:/keras.io/api/layers/reshaping_layers/zero_padding3d#zeropadding3d-class}
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/layers/ZeroPadding3D}
}

Other reshaping layers: 
\code{\link{layer_cropping_1d}()},
\code{\link{layer_cropping_2d}()},
\code{\link{layer_cropping_3d}()},
\code{\link{layer_flatten}()},
\code{\link{layer_permute}()},
\code{\link{layer_repeat_vector}()},
\code{\link{layer_reshape}()},
\code{\link{layer_upsampling_1d}()},
\code{\link{layer_upsampling_2d}()},
\code{\link{layer_upsampling_3d}()},
\code{\link{layer_zero_padding_1d}()},
\code{\link{layer_zero_padding_2d}()}
}
\concept{reshaping layers}
