% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-layers-normalization.R
\name{layer_spectral_normalization}
\alias{layer_spectral_normalization}
\title{Performs spectral normalization on the weights of a target layer.}
\usage{
layer_spectral_normalization(object, layer, power_iterations = 1L, ...)
}
\arguments{
\item{object}{Object to compose the layer with. A tensor, array, or sequential model.}

\item{layer}{A \code{Layer} instance that
has either a \code{kernel} (e.g. \code{layer_conv_2d}, \code{layer_dense}...)
or an \code{embeddings} attribute (\code{Embedding} layer).}

\item{power_iterations}{int, the number of iterations during normalization.}

\item{...}{Base wrapper keyword arguments.}
}
\description{
This wrapper controls the Lipschitz constant of the weights of a layer by
constraining their spectral norm, which can stabilize the training of GANs.
}
\section{Examples}{
Wrap \code{layer_conv_2d}:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{x <- random_uniform(c(1, 10, 10, 1))
conv2d <- layer_spectral_normalization(
  layer = layer_conv_2d(filters = 2, kernel_size = 2)
)
y <- conv2d(x)
y$shape
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode">}}\preformatted{## TensorShape([1, 9, 9, 2])
}\if{html}{\out{</div>}}

Wrap \code{layer_Dense}:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{x <- random_uniform(c(1, 10, 10, 1))
dense <- layer_spectral_normalization(layer = layer_dense(units = 10))
y <- dense(x)
y$shape
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode">}}\preformatted{## TensorShape([1, 10, 10, 10])
}\if{html}{\out{</div>}}
}

\section{Reference}{
\itemize{
\item \href{https://arxiv.org/abs/1802.05957}{Spectral Normalization for GAN}.
}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/layers/SpectralNormalization}
}

Other normalization layers: 
\code{\link{layer_batch_normalization}()},
\code{\link{layer_group_normalization}()},
\code{\link{layer_layer_normalization}()},
\code{\link{layer_unit_normalization}()}
}
\concept{normalization layers}
