% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-metrics.R
\name{metric_fbeta_score}
\alias{metric_fbeta_score}
\title{Computes F-Beta score.}
\usage{
metric_fbeta_score(
  ...,
  average = NULL,
  beta = 1,
  threshold = NULL,
  name = "fbeta_score",
  dtype = NULL
)
}
\arguments{
\item{...}{Passed on to the Python callable}

\item{average}{Type of averaging to be performed across per-class results
in the multi-class case.
Acceptable values are \code{None}, \code{"micro"}, \code{"macro"} and
\code{"weighted"}. Defaults to \code{None}.
If \code{None}, no averaging is performed and \code{result()} will return
the score for each class.
If \code{"micro"}, compute metrics globally by counting the total
true positives, false negatives and false positives.
If \code{"macro"}, compute metrics for each label,
and return their unweighted mean.
This does not take label imbalance into account.
If \code{"weighted"}, compute metrics for each label,
and return their average weighted by support
(the number of true instances for each label).
This alters \code{"macro"} to account for label imbalance.
It can result in an score that is not between precision and recall.}

\item{beta}{Determines the weight of given to recall
in the harmonic mean between precision and recall (see pseudocode
equation above). Defaults to \code{1}.}

\item{threshold}{Elements of \code{y_pred} greater than \code{threshold} are
converted to be 1, and the rest 0. If \code{threshold} is
\code{None}, the argmax of \code{y_pred} is converted to 1, and the rest to 0.}

\item{name}{Optional. String name of the metric instance.}

\item{dtype}{Optional. Data type of the metric result.}
}
\description{
Formula:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{b2 = beta ** 2
f_beta_score = (1 + b2) * (precision * recall) / (precision * b2 + recall)
}\if{html}{\out{</div>}}

This is the weighted harmonic mean of precision and recall.
Its output range is \verb{[0, 1]}. It works for both multi-class
and multi-label classification.
}
\section{Returns}{
F-Beta Score: float.
}

\section{Examples}{
\if{html}{\out{<div class="sourceCode python">}}\preformatted{metric = keras.metrics.FBetaScore(beta=2.0, threshold=0.5)
y_true = np.array([[1, 1, 1],
                   [1, 0, 0],
                   [1, 1, 0]], np.int32)
y_pred = np.array([[0.2, 0.6, 0.7],
                   [0.2, 0.6, 0.6],
                   [0.6, 0.8, 0.0]], np.float32)
metric.update_state(y_true, y_pred)
result = metric.result()
result
# [0.3846154 , 0.90909094, 0.8333334 ]
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/metrics/FBetaScore}
}

Other metric: 
\code{\link{metric_auc}()},
\code{\link{metric_binary_accuracy}()},
\code{\link{metric_binary_crossentropy}()},
\code{\link{metric_binary_iou}()},
\code{\link{metric_categorical_accuracy}()},
\code{\link{metric_categorical_crossentropy}()},
\code{\link{metric_categorical_hinge}()},
\code{\link{metric_cosine_similarity}()},
\code{\link{metric_f1_score}()},
\code{\link{metric_false_negatives}()},
\code{\link{metric_false_positives}()},
\code{\link{metric_hinge}()},
\code{\link{metric_iou}()},
\code{\link{metric_kl_divergence}()},
\code{\link{metric_log_cosh_error}()},
\code{\link{metric_mean_absolute_error}()},
\code{\link{metric_mean_absolute_percentage_error}()},
\code{\link{metric_mean_iou}()},
\code{\link{metric_mean_squared_error}()},
\code{\link{metric_mean_squared_logarithmic_error}()},
\code{\link{metric_mean_wrapper}()},
\code{\link{metric_mean}()},
\code{\link{metric_one_hot_iou}()},
\code{\link{metric_one_hot_mean_iou}()},
\code{\link{metric_poisson}()},
\code{\link{metric_precision_at_recall}()},
\code{\link{metric_precision}()},
\code{\link{metric_r2_score}()},
\code{\link{metric_recall_at_precision}()},
\code{\link{metric_recall}()},
\code{\link{metric_root_mean_squared_error}()},
\code{\link{metric_sensitivity_at_specificity}()},
\code{\link{metric_sparse_categorical_accuracy}()},
\code{\link{metric_sparse_categorical_crossentropy}()},
\code{\link{metric_sparse_top_k_categorical_accuracy}()},
\code{\link{metric_specificity_at_sensitivity}()},
\code{\link{metric_squared_hinge}()},
\code{\link{metric_sum}()},
\code{\link{metric_top_k_categorical_accuracy}()},
\code{\link{metric_true_negatives}()},
\code{\link{metric_true_positives}()}
}
\concept{metric}
