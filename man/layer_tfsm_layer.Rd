% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layers-export.R
\name{layer_tfsm_layer}
\alias{layer_tfsm_layer}
\title{Reload a Keras model/layer that was saved via SavedModel / ExportArchive.}
\usage{
layer_tfsm_layer(
  object,
  filepath,
  call_endpoint = "serve",
  call_training_endpoint = NULL,
  trainable = TRUE,
  name = NULL,
  dtype = NULL
)
}
\arguments{
\item{filepath}{\code{str} or \code{pathlib.Path} object. The path to the SavedModel.}

\item{call_endpoint}{Name of the endpoint to use as the \code{call()} method
of the reloaded layer. If the SavedModel was created
via \code{model.export()},
then the default endpoint name is \code{'serve'}. In other cases
it may be named \code{'serving_default'}.}
}
\description{
Reload a Keras model/layer that was saved via SavedModel / ExportArchive.
}
\section{Examples}{
\if{html}{\out{<div class="sourceCode python">}}\preformatted{model.export("path/to/artifact")
reloaded_layer = TFSMLayer("path/to/artifact")
outputs = reloaded_layer(inputs)
}\if{html}{\out{</div>}}

The reloaded object can be used like a regular Keras layer, and supports
training/fine-tuning of its trainable weights. Note that the reloaded
object retains none of the internal structure or custom methods of the
original object -- it's a brand new layer created around the saved
function.

\strong{Limitations:}
\itemize{
\item Only call endpoints with a single \code{inputs} tensor argument
(which may optionally be a dict/tuple/list of tensors) are supported.
For endpoints with multiple separate input tensor arguments, consider
subclassing \code{TFSMLayer} and implementing a \code{call()} method with a
custom signature.
\item If you need training-time behavior to differ from inference-time behavior
(i.e. if you need the reloaded object to support a \code{training=True} argument
in \verb{__call__()}), make sure that the training-time call function is
saved as a standalone endpoint in the artifact, and provide its name
to the \code{TFSMLayer} via the \code{call_training_endpoint} argument.
}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/layers/TFSMLayer}
}
}
