% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-callbacks.R
\name{callback_csv_logger}
\alias{callback_csv_logger}
\title{Callback that streams epoch results to a CSV file.}
\usage{
callback_csv_logger(filename, separator = ",", append = FALSE)
}
\arguments{
\item{filename}{Filename of the CSV file, e.g. \code{'run/log.csv'}.}

\item{separator}{String used to separate elements in the CSV file.}

\item{append}{Boolean. True: append if file exists (useful for continuing
training). False: overwrite existing file.}
}
\description{
Supports all values that can be represented as a string,
including 1D iterables such as \code{np.ndarray}.
}
\section{Examples}{
\if{html}{\out{<div class="sourceCode python">}}\preformatted{csv_logger = CSVLogger('training.log')
model.fit(X_train, Y_train, callbacks=[csv_logger])
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/CSVLogger}
}

Other callback: 
\code{\link{callback_early_stopping}()},
\code{\link{callback_lambda}()},
\code{\link{callback_learning_rate_scheduler}()},
\code{\link{callback_model_checkpoint}()},
\code{\link{callback_progbar_logger}()},
\code{\link{callback_reduce_lr_on_plateau}()},
\code{\link{callback_remote_monitor}()},
\code{\link{callback_tensorboard}()},
\code{\link{callback_terminate_on_nan}()}
}
\concept{callback}
