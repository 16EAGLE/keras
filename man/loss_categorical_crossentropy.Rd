% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-losses.R
\name{loss_categorical_crossentropy}
\alias{loss_categorical_crossentropy}
\title{Computes the crossentropy loss between the labels and predictions.}
\usage{
loss_categorical_crossentropy(
  y_true,
  y_pred,
  from_logits = FALSE,
  label_smoothing = 0,
  axis = -1L,
  ...,
  reduction = "sum_over_batch_size",
  name = "categorical_crossentropy"
)
}
\arguments{
\item{y_true}{Tensor of one-hot true targets.}

\item{y_pred}{Tensor of predicted targets.}

\item{from_logits}{Whether \code{y_pred} is expected to be a logits tensor. By
default, we assume that \code{y_pred} encodes a probability distribution.}

\item{label_smoothing}{Float in \verb{[0, 1].} If > \code{0} then smooth the labels. For
example, if \code{0.1}, use \code{0.1 / num_classes} for non-target labels
and \code{0.9 + 0.1 / num_classes} for target labels.}

\item{axis}{Defaults to \code{-1}. The dimension along which the entropy is
computed.}

\item{...}{Passed on to the Python callable}

\item{reduction}{Type of reduction to apply to the loss. In almost all cases
this should be \code{"sum_over_batch_size"}.
Supported options are \code{"sum"}, \code{"sum_over_batch_size"} or \code{None}.}

\item{name}{Optional name for the loss instance.}
}
\description{
Use this crossentropy loss function when there are two or more label
classes. We expect labels to be provided in a \code{one_hot} representation. If
you want to provide labels as integers, please use
\code{SparseCategoricalCrossentropy} loss. There should be \code{num_classes} floating
point values per feature, i.e., the shape of both \code{y_pred} and \code{y_true} are
\verb{[batch_size, num_classes]}.
}
\section{Examples}{
\if{html}{\out{<div class="sourceCode python">}}\preformatted{y_true = [[0, 1, 0], [0, 0, 1]]
y_pred = [[0.05, 0.95, 0], [0.1, 0.8, 0.1]]
loss = keras.losses.categorical_crossentropy(y_true, y_pred)
assert loss.shape == (2,)
loss
# array([0.0513, 2.303], dtype=float32)
}\if{html}{\out{</div>}}
}

\section{Usage}{
Standalone usage:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{y_true = [[0, 1, 0], [0, 0, 1]]
y_pred = [[0.05, 0.95, 0], [0.1, 0.8, 0.1]]
# Using 'auto'/'sum_over_batch_size' reduction type.
cce = keras.losses.CategoricalCrossentropy()
cce(y_true, y_pred)
# 1.177
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode python">}}\preformatted{# Calling with 'sample_weight'.
cce(y_true, y_pred, sample_weight=np.array([0.3, 0.7]))
# 0.814
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode python">}}\preformatted{# Using 'sum' reduction type.
cce = keras.losses.CategoricalCrossentropy(
    reduction="sum")
cce(y_true, y_pred)
# 2.354
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode python">}}\preformatted{# Using 'none' reduction type.
cce = keras.losses.CategoricalCrossentropy(
    reduction=None)
cce(y_true, y_pred)
# array([0.0513, 2.303], dtype=float32)
}\if{html}{\out{</div>}}

Usage with the \code{compile()} API:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{model.compile(optimizer='sgd',
              loss=keras.losses.CategoricalCrossentropy())
}\if{html}{\out{</div>}}
}

\section{Returns}{
Categorical crossentropy loss value.
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/losses/CategoricalCrossentropy}
}

Other loss: 
\code{\link{loss_binary_crossentropy}()},
\code{\link{loss_binary_focal_crossentropy}()},
\code{\link{loss_categorical_focal_crossentropy}()},
\code{\link{loss_categorical_hinge}()},
\code{\link{loss_cosine_similarity}()},
\code{\link{loss_hinge}()},
\code{\link{loss_huber}()},
\code{\link{loss_kl_divergence}()},
\code{\link{loss_log_cosh}()},
\code{\link{loss_mean_absolute_error}()},
\code{\link{loss_mean_absolute_percentage_error}()},
\code{\link{loss_mean_squared_error}()},
\code{\link{loss_mean_squared_logarithmic_error}()},
\code{\link{loss_poisson}()},
\code{\link{loss_sparse_categorical_crossentropy}()},
\code{\link{loss_squared_hinge}()}
}
\concept{loss}
