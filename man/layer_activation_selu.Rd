% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-layers-activations.R
\name{layer_activation_selu}
\alias{layer_activation_selu}
\title{Scaled Exponential Linear Unit (SELU).}
\usage{
layer_activation_selu(object, ...)
}
\arguments{
\item{object}{tensor or model}

\item{...}{
  Arguments passed on to \code{\link[=layer_activation]{layer_activation}}
  \describe{
    \item{\code{activation}}{Activation function. It could be a callable, or the name of
an activation from the \code{keras_core.activations} namespace.}
  }}

\item{x}{Input tensor.

Notes:
\itemize{
\item To be used together with the
\code{keras_core.initializers.LecunNormal} initializer.
\item To be used together with the dropout variant
\code{keras_core.layers.AlphaDropout} (rather than regular dropout).
}}
}
\description{
The Scaled Exponential Linear Unit (SELU) activation function is defined as:
\itemize{
\item \code{scale * x} if \code{x > 0}
\item \code{scale * alpha * (exp(x) - 1)} if \code{x < 0}
}

where \code{alpha} and \code{scale} are pre-defined constants
(\code{alpha=1.67326324} and \code{scale=1.05070098}).

Basically, the SELU activation function multiplies \code{scale} (> 1) with the
output of the \code{keras_core.activations.elu} function to ensure a slope larger
than one for positive inputs.

The values of \code{alpha} and \code{scale} are
chosen so that the mean and variance of the inputs are preserved
between two consecutive layers as long as the weights are initialized
correctly (see \code{keras_core.initializers.LecunNormal} initializer)
and the number of input units is "large enough"
(see reference paper for more information).
}
\section{Reference}{
\itemize{
\item \href{https://arxiv.org/abs/1706.02515}{Klambauer et al., 2017}
}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/activations/selu}
}
}
\concept{activation layers}
