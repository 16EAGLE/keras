% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-losses.R
\name{loss_log_cosh}
\alias{loss_log_cosh}
\title{Computes the logarithm of the hyperbolic cosine of the prediction error.}
\usage{
loss_log_cosh(
  y_true,
  y_pred,
  ...,
  reduction = "sum_over_batch_size",
  name = "log_cosh"
)
}
\arguments{
\item{y_true}{Ground truth values with shape = \verb{[batch_size, d0, .. dN]}.}

\item{y_pred}{The predicted values with shape = \verb{[batch_size, d0, .. dN]}.}

\item{...}{Passed on to the Python callable}

\item{reduction}{Type of reduction to apply to loss. Options are \code{"sum"},
\code{"sum_over_batch_size"} or \code{None}. Defaults to
\code{"sum_over_batch_size"}.}

\item{name}{Optional name for the instance.}
}
\value{
\if{html}{\out{<div class="sourceCode">}}\preformatted{Logcosh error values with shape = `[batch_size, d0, .. dN-1]`.
}\if{html}{\out{</div>}}
}
\description{
Formula:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{loss = mean(log(cosh(y_pred - y_true)), axis=-1)
}\if{html}{\out{</div>}}

Note that \code{log(cosh(x))} is approximately equal to \code{(x ** 2) / 2} for small
\code{x} and to \code{abs(x) - log(2)} for large \code{x}. This means that 'logcosh' works
mostly like the mean squared error, but will not be so strongly affected by
the occasional wildly incorrect prediction.
Formula:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{error = y_pred - y_true
logcosh = mean(log((exp(error) + exp(-error))/2), axis=-1)`
}\if{html}{\out{</div>}}

where x is the error \code{y_pred - y_true}.
}
\section{Examples}{
\if{html}{\out{<div class="sourceCode python">}}\preformatted{y_true = [[0., 1.], [0., 0.]]
y_pred = [[1., 1.], [0., 0.]]
loss = keras.losses.log_cosh(y_true, y_pred)
# 0.108
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/losses/LogCosh}
}

Other loss: 
\code{\link{loss_binary_crossentropy}()},
\code{\link{loss_binary_focal_crossentropy}()},
\code{\link{loss_categorical_crossentropy}()},
\code{\link{loss_categorical_focal_crossentropy}()},
\code{\link{loss_categorical_hinge}()},
\code{\link{loss_cosine_similarity}()},
\code{\link{loss_hinge}()},
\code{\link{loss_huber}()},
\code{\link{loss_kl_divergence}()},
\code{\link{loss_mean_absolute_error}()},
\code{\link{loss_mean_absolute_percentage_error}()},
\code{\link{loss_mean_squared_error}()},
\code{\link{loss_mean_squared_logarithmic_error}()},
\code{\link{loss_poisson}()},
\code{\link{loss_sparse_categorical_crossentropy}()},
\code{\link{loss_squared_hinge}()}
}
\concept{loss}
