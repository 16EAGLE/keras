% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-layers-pooling.R, R/layers-pooling.R
\name{layer_average_pooling_3d}
\alias{layer_average_pooling_3d}
\title{Average pooling operation for 3D data (spatial or spatio-temporal).}
\usage{
layer_average_pooling_3d(
  object,
  pool_size,
  strides = NULL,
  padding = "valid",
  data_format = "channels_last",
  name = NULL,
  ...
)

layer_average_pooling_3d(
  object,
  pool_size,
  strides = NULL,
  padding = "valid",
  data_format = "channels_last",
  name = NULL,
  ...
)
}
\arguments{
\item{pool_size}{int or tuple of 3 integers, factors by which to downscale
(dim1, dim2, dim3). If only one integer is specified, the same
window length will be used for all dimensions.}

\item{strides}{int or tuple of 3 integers, or None. Strides values. If None,
it will default to \code{pool_size}. If only one int is specified, the
same stride size will be used for all dimensions.}

\item{padding}{string, either \code{"valid"} or \code{"same"} (case-insensitive).
\code{"valid"} means no padding. \code{"same"} results in padding evenly to
the left/right or up/down of the input such that output has the same
height/width dimension as the input.}

\item{data_format}{string, either \code{"channels_last"} or \code{"channels_first"}.
The ordering of the dimensions in the inputs. \code{"channels_last"}
corresponds to inputs with shape
\verb{(batch, spatial_dim1, spatial_dim2, spatial_dim3, channels)} while
\code{"channels_first"} corresponds to inputs with shape
\verb{(batch, channels, spatial_dim1, spatial_dim2, spatial_dim3)}.
It defaults to the \code{image_data_format} value found in your Keras
config file at \verb{~/.keras/keras.json}. If you never set it, then it
will be \code{"channels_last"}.}
}
\description{
Downsamples the input along its spatial dimensions (depth, height, and
width) by taking the average value over an input window (of size defined by
\code{pool_size}) for each channel of the input. The window is shifted by
\code{strides} along each dimension.

Downsamples the input along its spatial dimensions (depth, height, and
width) by taking the average value over an input window (of size defined by
\code{pool_size}) for each channel of the input. The window is shifted by
\code{strides} along each dimension.
}
\section{Input Shape}{
\itemize{
\item If \code{data_format="channels_last"}:
5D tensor with shape:
\verb{(batch_size, spatial_dim1, spatial_dim2, spatial_dim3, channels)}
\item If \code{data_format="channels_first"}:
5D tensor with shape:
\verb{(batch_size, channels, spatial_dim1, spatial_dim2, spatial_dim3)}
}

\itemize{
\item If \code{data_format="channels_last"}:
5D tensor with shape:
\verb{(batch_size, spatial_dim1, spatial_dim2, spatial_dim3, channels)}
\item If \code{data_format="channels_first"}:
5D tensor with shape:
\verb{(batch_size, channels, spatial_dim1, spatial_dim2, spatial_dim3)}
}
}

\section{Output Shape}{
\itemize{
\item If \code{data_format="channels_last"}:
5D tensor with shape:
\verb{(batch_size, pooled_dim1, pooled_dim2, pooled_dim3, channels)}
\item If \code{data_format="channels_first"}:
5D tensor with shape:
\verb{(batch_size, channels, pooled_dim1, pooled_dim2, pooled_dim3)}
}

\itemize{
\item If \code{data_format="channels_last"}:
5D tensor with shape:
\verb{(batch_size, pooled_dim1, pooled_dim2, pooled_dim3, channels)}
\item If \code{data_format="channels_first"}:
5D tensor with shape:
\verb{(batch_size, channels, pooled_dim1, pooled_dim2, pooled_dim3)}
}
}

\section{Examples}{
\if{html}{\out{<div class="sourceCode python">}}\preformatted{depth = 30
height = 30
width = 30
channels = 3

inputs = keras_core.layers.Input(shape=(depth, height, width, channels))
layer = keras_core.layers.AveragePooling3D(pool_size=3)
outputs = layer(inputs)  # Shape: (batch_size, 10, 10, 10, 3)
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode python">}}\preformatted{depth = 30
height = 30
width = 30
channels = 3

inputs = keras_core.layers.Input(shape=(depth, height, width, channels))
layer = keras_core.layers.AveragePooling3D(pool_size=3)
outputs = layer(inputs)  # Shape: (batch_size, 10, 10, 10, 3)
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/layers/AveragePooling3D}
}

\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/layers/AveragePooling3D}
}

Other pooling layers: 
\code{\link{layer_average_pooling_1d}()},
\code{\link{layer_average_pooling_2d}()},
\code{\link{layer_global_average_pooling_1d}()},
\code{\link{layer_global_average_pooling_2d}()},
\code{\link{layer_global_average_pooling_3d}()},
\code{\link{layer_global_max_pooling_1d}()},
\code{\link{layer_global_max_pooling_2d}()},
\code{\link{layer_global_max_pooling_3d}()},
\code{\link{layer_max_pooling_1d}()},
\code{\link{layer_max_pooling_2d}()},
\code{\link{layer_max_pooling_3d}()}

Other pooling layers: 
\code{\link{layer_average_pooling_1d}()},
\code{\link{layer_average_pooling_2d}()},
\code{\link{layer_global_average_pooling_1d}()},
\code{\link{layer_global_average_pooling_2d}()},
\code{\link{layer_global_average_pooling_3d}()},
\code{\link{layer_global_max_pooling_1d}()},
\code{\link{layer_global_max_pooling_2d}()},
\code{\link{layer_global_max_pooling_3d}()},
\code{\link{layer_max_pooling_1d}()},
\code{\link{layer_max_pooling_2d}()},
\code{\link{layer_max_pooling_3d}()}
}
\concept{pooling layers}
