% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-random.R
\name{k_random_seed_generator}
\alias{k_random_seed_generator}
\title{Generates variable seeds upon each call to a RNG-using function.}
\usage{
k_random_seed_generator(seed = NULL, ...)
}
\arguments{
\item{seed}{Initial seed for the random number generator}

\item{...}{Passed on to the Python callable}
}
\description{
In Keras, all RNG-using methods (such as \code{keras.random.normal()})
are stateless, meaning that if you pass an integer seed to them
(such as \code{seed=42}), they will return the same values at each call.
In order to get different values at each call, you must use a
\code{SeedGenerator} instead as the seed argument. The \code{SeedGenerator}
object is stateful.
}
\section{Examples}{
\if{html}{\out{<div class="sourceCode python">}}\preformatted{seed_gen = keras.random.SeedGenerator(seed=42)
values = keras.random.normal(shape=(2, 3), seed=seed_gen)
new_values = keras.random.normal(shape=(2, 3), seed=seed_gen)
}\if{html}{\out{</div>}}

Usage in a layer:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{class Dropout(keras.Layer):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.seed_generator = keras.random.SeedGenerator(1337)

    def call(self, x, training=False):
        if training:
            return keras.random.dropout(
                x, rate=0.5, seed=self.seed_generator
            )
        return x
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/random/SeedGenerator}
}
}
