% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layers-core.R
\name{layer_dropout}
\alias{layer_dropout}
\title{Applies Dropout to the input.}
\usage{
layer_dropout(x, rate, noise_shape = NULL, seed = NULL)
}
\arguments{
\item{x}{Model or layer}

\item{rate}{float between 0 and 1. Fraction of the input units to drop.}

\item{noise_shape}{1D integer tensor representing the shape of the binary
dropout mask that will be multiplied with the input. For instance, if your
inputs have shape \code{(batch_size, timesteps, features)} and you want the
dropout mask to be the same for all timesteps, you can use
\code{noise_shape=c(batch_size, 1, features)}.}

\item{seed}{A Python integer to use as random seed.}
}
\description{
Dropout consists in randomly setting a fraction \code{p} of input units to 0 at
each update during training time, which helps prevent overfitting.
}
