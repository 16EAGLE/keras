% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-utils.R
\name{text_dataset_from_directory}
\alias{text_dataset_from_directory}
\title{Generates a \code{tf.data.Dataset} from text files in a directory.}
\usage{
text_dataset_from_directory(
  directory,
  labels = "inferred",
  label_mode = "int",
  class_names = NULL,
  batch_size = 32L,
  max_length = NULL,
  shuffle = TRUE,
  seed = NULL,
  validation_split = NULL,
  subset = NULL,
  follow_links = FALSE
)
}
\arguments{
\item{directory}{Directory where the data is located.
If \code{labels} is \code{"inferred"}, it should contain
subdirectories, each containing text files for a class.
Otherwise, the directory structure is ignored.}

\item{labels}{Either \code{"inferred"}
(labels are generated from the directory structure),
\code{None} (no labels),
or a list/tuple of integer labels of the same size as the number of
text files found in the directory. Labels should be sorted according
to the alphanumeric order of the text file paths
(obtained via \code{os.walk(directory)} in Python).}

\item{label_mode}{String describing the encoding of \code{labels}. Options are:
\itemize{
\item \code{"int"}: means that the labels are encoded as integers
(e.g. for \code{sparse_categorical_crossentropy} loss).
\item \code{"categorical"} means that the labels are
encoded as a categorical vector
(e.g. for \code{categorical_crossentropy} loss).
\item \code{"binary"} means that the labels (there can be only 2)
are encoded as \code{float32} scalars with values 0 or 1
(e.g. for \code{binary_crossentropy}).
\item \code{None} (no labels).
}}

\item{class_names}{Only valid if \code{"labels"} is \code{"inferred"}.
This is the explicit list of class names
(must match names of subdirectories). Used to control the order
of the classes (otherwise alphanumerical order is used).}

\item{batch_size}{Size of the batches of data. Defaults to 32.
If \code{None}, the data will not be batched
(the dataset will yield individual samples).}

\item{max_length}{Maximum size of a text string. Texts longer than this will
be truncated to \code{max_length}.}

\item{shuffle}{Whether to shuffle the data. Defaults to \code{True}.
If set to \code{False}, sorts the data in alphanumeric order.}

\item{seed}{Optional random seed for shuffling and transformations.}

\item{validation_split}{Optional float between 0 and 1,
fraction of data to reserve for validation.}

\item{subset}{Subset of the data to return.
One of \code{"training"}, \code{"validation"} or \code{"both"}.
Only used if \code{validation_split} is set.
When \code{subset="both"}, the utility returns a tuple of two datasets
(the training and validation datasets respectively).}

\item{follow_links}{Whether to visits subdirectories pointed to by symlinks.
Defaults to \code{False}.}
}
\value{
A \code{tf.data.Dataset} object.
\itemize{
\item If \code{label_mode} is \code{None}, it yields \code{string} tensors of shape
\verb{(batch_size,)}, containing the contents of a batch of text files.
\item Otherwise, it yields a tuple \verb{(texts, labels)}, where \code{texts}
has shape \verb{(batch_size,)} and \code{labels} follows the format described
below.
}

Rules regarding labels format:
\itemize{
\item if \code{label_mode} is \code{int}, the labels are an \code{int32} tensor of shape
\verb{(batch_size,)}.
\item if \code{label_mode} is \code{binary}, the labels are a \code{float32} tensor of
1s and 0s of shape \verb{(batch_size, 1)}.
\item if \code{label_mode} is \code{categorical}, the labels are a \code{float32} tensor
of shape \verb{(batch_size, num_classes)}, representing a one-hot
encoding of the class index.
}
}
\description{
If your directory structure is:

\if{html}{\out{<div class="sourceCode">}}\preformatted{main_directory/
...class_a/
......a_text_1.txt
......a_text_2.txt
...class_b/
......b_text_1.txt
......b_text_2.txt
}\if{html}{\out{</div>}}

Then calling \code{text_dataset_from_directory(main_directory, labels='inferred')} will return a \code{tf.data.Dataset} that yields batches of
texts from the subdirectories \code{class_a} and \code{class_b}, together with labels
0 and 1 (0 corresponding to \code{class_a} and 1 corresponding to \code{class_b}).

Only \code{.txt} files are supported at this time.
}
\seealso{
\itemize{
\item \url{https:/keras.io/api/data_loading/text#textdatasetfromdirectory-function}
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/utils/text_dataset_from_directory}
}

Other dataset utils: 
\code{\link{audio_dataset_from_directory}()},
\code{\link{image_dataset_from_directory}()},
\code{\link{pack_x_y_sample_weight}()},
\code{\link{split_dataset}()},
\code{\link{unpack_x_y_sample_weight}()}

Other utils: 
\code{\link{audio_dataset_from_directory}()},
\code{\link{clear_session}()},
\code{\link{config_disable_interactive_logging}()},
\code{\link{config_disable_traceback_filtering}()},
\code{\link{config_enable_interactive_logging}()},
\code{\link{config_enable_traceback_filtering}()},
\code{\link{config_is_interactive_logging_enabled}()},
\code{\link{config_is_traceback_filtering_enabled}()},
\code{\link{get_custom_objects}()},
\code{\link{get_file}()},
\code{\link{get_registered_name}()},
\code{\link{get_registered_object}()},
\code{\link{get_source_inputs}()},
\code{\link{image_array_save}()},
\code{\link{image_dataset_from_directory}()},
\code{\link{image_from_array}()},
\code{\link{image_load}()},
\code{\link{image_smart_resize}()},
\code{\link{image_to_array}()},
\code{\link{layer_feature_space}()},
\code{\link{layer_torch_module_wrapper}()},
\code{\link{model_to_dot}()},
\code{\link{normalize}()},
\code{\link{pack_x_y_sample_weight}()},
\code{\link{pad_sequences}()},
\code{\link{set_random_seed}()},
\code{\link{split_dataset}()},
\code{\link{timeseries_dataset_from_array}()},
\code{\link{to_categorical}()},
\code{\link{unpack_x_y_sample_weight}()}
}
\concept{dataset utils}
\concept{utils}
