% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/keras-applications.R
\name{application_xception}
\alias{application_xception}
\title{Instantiates the Xception architecture.}
\usage{
application_xception(
  include_top = TRUE,
  weights = "imagenet",
  input_tensor = NULL,
  input_shape = NULL,
  pooling = NULL,
  classes = 1000L,
  classifier_activation = "softmax"
)
}
\arguments{
\item{include_top}{whether to include the 3 fully-connected
layers at the top of the network.}

\item{weights}{one of \code{NULL} (random initialization),
\code{"imagenet"} (pre-training on ImageNet),
or the path to the weights file to be loaded.}

\item{input_tensor}{optional Keras tensor
(i.e. output of \code{layers.Input()})
to use as image input for the model.}

\item{input_shape}{optional shape tuple, only to be specified
if \code{include_top} is \code{FALSE} (otherwise the input shape
has to be \verb{(299, 299, 3)}.
It should have exactly 3 inputs channels,
and width and height should be no smaller than 71.
E.g. \verb{(150, 150, 3)} would be one valid value.}

\item{pooling}{Optional pooling mode for feature extraction
when \code{include_top} is \code{FALSE}.
\itemize{
\item \code{NULL} means that the output of the model will be
the 4D tensor output of the
last convolutional block.
\item \code{avg} means that global average pooling
will be applied to the output of the
last convolutional block, and thus
the output of the model will be a 2D tensor.
\item \code{max} means that global max pooling will
be applied.
}}

\item{classes}{optional number of classes to classify images
into, only to be specified if \code{include_top} is \code{TRUE}, and
if no \code{weights} argument is specified.}

\item{classifier_activation}{A \code{str} or callable. The activation function to
use on the "top" layer. Ignored unless \code{include_top=TRUE}. Set
\code{classifier_activation=NULL} to return the logits of the "top"
layer.  When loading pretrained weights, \code{classifier_activation} can
only be \code{NULL} or \code{"softmax"}.}
}
\value{
\if{html}{\out{<div class="sourceCode">}}\preformatted{A model instance.
}\if{html}{\out{</div>}}
}
\description{
Instantiates the Xception architecture.
}
\section{Reference}{
\itemize{
\item \href{https://arxiv.org/abs/1610.02357}{Xception: Deep Learning with Depthwise Separable Convolutions} (CVPR 2017)
}

For image classification use cases, see
\href{https://keras.io/api/applications/#usage-examples-for-image-classification-models}{this page for detailed examples}.

For transfer learning use cases, make sure to read the
\href{https://keras.io/guides/transfer_learning/}{guide to transfer learning & fine-tuning}.

The default input image size for this model is 299x299.
}

\section{Note}{
each Keras Application expects a specific kind of input preprocessing.
For Xception, call \code{keras.applications.xception.preprocess_input}
on your inputs before passing them to the model.
\code{xception.preprocess_input} will scale input pixels between -1 and 1.
}

\seealso{
\itemize{
\item \url{https:/keras.io/api/applications/xception#xception-function}
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/applications/Xception}
}
}
