% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-layers-pooling.R
\name{layer_max_pooling_2d}
\alias{layer_max_pooling_2d}
\title{Max pooling operation for 2D spatial data.}
\usage{
layer_max_pooling_2d(
  object,
  pool_size = list(2L, 2L),
  strides = NULL,
  padding = "valid",
  data_format = NULL,
  name = NULL,
  ...
)
}
\arguments{
\item{object}{Object to compose the layer with. A tensor, array, or sequential model.}

\item{pool_size}{int or tuple of 2 integers, factors by which to downscale
(dim1, dim2). If only one integer is specified, the same
window length will be used for all dimensions.}

\item{strides}{int or tuple of 2 integers, or None. Strides values. If None,
it will default to \code{pool_size}. If only one int is specified, the
same stride size will be used for all dimensions.}

\item{padding}{string, either \code{"valid"} or \code{"same"} (case-insensitive).
\code{"valid"} means no padding. \code{"same"} results in padding evenly to
the left/right or up/down of the input such that output has the same
height/width dimension as the input.}

\item{data_format}{string, either \code{"channels_last"} or \code{"channels_first"}.
The ordering of the dimensions in the inputs. \code{"channels_last"}
corresponds to inputs with shape \verb{(batch, height, width, channels)}
while \code{"channels_first"} corresponds to inputs with shape
\verb{(batch, channels, height, width)}. It defaults to the
\code{image_data_format} value found in your Keras config file at
\verb{~/.keras/keras.json}. If you never set it, then it will be
\code{"channels_last"}.}

\item{name}{name for the layer}

\item{...}{Passed on to the Python callable}
}
\description{
Downsamples the input along its spatial dimensions (height and width)
by taking the maximum value over an input window
(of size defined by \code{pool_size}) for each channel of the input.
The window is shifted by \code{strides} along each dimension.

The resulting output when using the \code{"valid"} padding option has a spatial
shape (number of rows or columns) of:
\code{output_shape = math.floor((input_shape - pool_size) / strides) + 1}
(when \code{input_shape >= pool_size})

The resulting output shape when using the \code{"same"} padding option is:
\code{output_shape = math.floor((input_shape - 1) / strides) + 1}
}
\section{Input Shape}{
\itemize{
\item If \code{data_format="channels_last"}:
4D tensor with shape \verb{(batch_size, height, width, channels)}.
\item If \code{data_format="channels_first"}:
4D tensor with shape \verb{(batch_size, channels, height, width)}.
}
}

\section{Output Shape}{
\itemize{
\item If \code{data_format="channels_last"}:
4D tensor with shape
\verb{(batch_size, pooled_height, pooled_width, channels)}.
\item If \code{data_format="channels_first"}:
4D tensor with shape
\verb{(batch_size, channels, pooled_height, pooled_width)}.
}
}

\section{Examples}{
\verb{strides=(1, 1)} and \code{padding="valid"}:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{x = np.array([[1., 2., 3.],
              [4., 5., 6.],
              [7., 8., 9.]])
x = np.reshape(x, [1, 3, 3, 1])
max_pool_2d = keras.layers.MaxPooling2D(pool_size=(2, 2),
   strides=(1, 1), padding="valid")
max_pool_2d(x)
}\if{html}{\out{</div>}}

\verb{strides=(2, 2)} and \code{padding="valid"}:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{x = np.array([[1., 2., 3., 4.],
              [5., 6., 7., 8.],
              [9., 10., 11., 12.]])
x = np.reshape(x, [1, 3, 4, 1])
max_pool_2d = keras.layers.MaxPooling2D(pool_size=(2, 2),
   strides=(2, 2), padding="valid")
max_pool_2d(x)
}\if{html}{\out{</div>}}

\verb{stride=(1, 1)} and \code{padding="same"}:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{x = np.array([[1., 2., 3.],
              [4., 5., 6.],
              [7., 8., 9.]])
x = np.reshape(x, [1, 3, 3, 1])
max_pool_2d = keras.layers.MaxPooling2D(pool_size=(2, 2),
   strides=(1, 1), padding="same")
max_pool_2d(x)
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/layers/MaxPooling2D}
}

Other pooling layers: 
\code{\link{layer_average_pooling_1d}()},
\code{\link{layer_average_pooling_2d}()},
\code{\link{layer_average_pooling_3d}()},
\code{\link{layer_global_average_pooling_1d}()},
\code{\link{layer_global_average_pooling_2d}()},
\code{\link{layer_global_average_pooling_3d}()},
\code{\link{layer_global_max_pooling_1d}()},
\code{\link{layer_global_max_pooling_2d}()},
\code{\link{layer_global_max_pooling_3d}()},
\code{\link{layer_max_pooling_1d}()},
\code{\link{layer_max_pooling_3d}()}
}
\concept{pooling layers}
