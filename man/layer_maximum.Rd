% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-layers-merging.R
\name{layer_maximum}
\alias{layer_maximum}
\title{Computes element-wise maximum on a list of inputs.}
\usage{
layer_maximum(inputs, ...)
}
\arguments{
\item{inputs}{layers to combine}

\item{...}{Passed on to the Python callable}
}
\description{
It takes as input a list of tensors, all of the same shape,
and returns a single tensor (also of the same shape).
}
\section{Examples}{
\if{html}{\out{<div class="sourceCode r">}}\preformatted{input_shape <- c(2, 3, 4)
x1 <- random_uniform(input_shape)
x2 <- random_uniform(input_shape)
y <- layer_maximum(x1, x2)
}\if{html}{\out{</div>}}

Usage in a Keras model:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{input1 <- layer_input(shape = c(16))
x1 <- input1 |> layer_dense(8, activation = 'relu')
input2 <- layer_input(shape = c(32))
x2 <- input2 |> layer_dense(8, activation = 'relu')
# equivalent to `y <- layer_maximum(x1, x2)`
y <- layer_maximum(x1, x2)
out <- y |> layer_dense(4)
model <- keras_model(inputs = c(input1, input2), outputs = out)
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https:/keras.io/api/layers/merging_layers/maximum#maximum-class}
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/layers/Maximum}
}

Other merging layers: 
\code{\link{layer_add}()},
\code{\link{layer_average}()},
\code{\link{layer_concatenate}()},
\code{\link{layer_dot}()},
\code{\link{layer_minimum}()},
\code{\link{layer_multiply}()},
\code{\link{layer_subtract}()}
}
\concept{merging layers}
