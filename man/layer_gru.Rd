% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recurrent.R
\name{layer_gru}
\alias{layer_gru}
\title{Gated Recurrent Unit - Cho et al.}
\usage{
layer_gru(x, units, activation = "tanh",
  recurrent_activation = "hard_sigmoid", use_bias = TRUE,
  kernel_initializer = "glorot_uniform",
  recurrent_initializer = "orthogonal", bias_initializer = "zeros",
  kernel_regularizer = NULL, recurrent_regularizer = NULL,
  bias_regularizer = NULL, activity_regularizer = NULL,
  kernel_constraint = NULL, recurrent_constraint = NULL,
  bias_constraint = NULL, dropout = 0, recurrent_dropout = 0,
  input_shape = NULL)
}
\arguments{
\item{x}{Model or layer}

\item{units}{Positive integer, dimensionality of the output space.}

\item{activation}{Activation function to use. If you don't specify anything,
no activation is applied (ie. "linear" activation: \code{a(x) = x}).}

\item{recurrent_activation}{Activation function to use for the recurrent
step.}

\item{use_bias}{Boolean, whether the layer uses a bias vector.}

\item{kernel_initializer}{Initializer for the \code{kernel} weights matrix, used
for the linear transformation of the inputs..}

\item{recurrent_initializer}{Initializer for the \code{recurrent_kernel} weights
matrix, used for the linear transformation of the recurrent state..}

\item{bias_initializer}{Initializer for the bias vector.}

\item{kernel_regularizer}{Regularizer function applied to the \code{kernel}
weights matrix.}

\item{recurrent_regularizer}{Regularizer function applied to the
\code{recurrent_kernel} weights matrix.}

\item{bias_regularizer}{Regularizer function applied to the bias vector.}

\item{activity_regularizer}{Regularizer function applied to the output of the
layer (its "activation")..}

\item{kernel_constraint}{Constraint function applied to the \code{kernel} weights
matrix.}

\item{recurrent_constraint}{Constraint function applied to the
\code{recurrent_kernel} weights matrix.}

\item{bias_constraint}{Constraint function applied to the bias vector.}

\item{dropout}{Float between 0 and 1. Fraction of the units to drop for the
linear transformation of the inputs.}

\item{recurrent_dropout}{Float between 0 and 1. Fraction of the units to drop
for the linear transformation of the recurrent state.}

\item{input_shape}{Dimensionality of the input (integer) not including the
samples axis. This argument is required when using this layer as the first
layer in a model.}
}
\description{
Gated Recurrent Unit - Cho et al.
}
\section{References}{

\itemize{
\item \href{https://arxiv.org/abs/1409.1259}{On the Properties of Neural Machine Translation:Encoder-Decoder Approaches}
\item \href{http://arxiv.org/abs/1412.3555v1}{EmpiricalEvaluation of Gated Recurrent Neural Networks on SequenceModeling}
\item \href{http://arxiv.org/abs/1512.05287}{A Theoretically GroundedApplication of Dropout in Recurrent NeuralNetworks}
}
}

