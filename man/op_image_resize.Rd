% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ops-image.R
\name{op_image_resize}
\alias{op_image_resize}
\title{Resize images to size using the specified interpolation method.}
\usage{
op_image_resize(
  image,
  size,
  interpolation = "bilinear",
  antialias = FALSE,
  data_format = "channels_last"
)
}
\arguments{
\item{image}{Input image or batch of images. Must be 3D or 4D.}

\item{size}{Size of output image in \verb{(height, width)} format.}

\item{interpolation}{Interpolation method. Available methods are \code{"nearest"},
\code{"bilinear"}, and \code{"bicubic"}. Defaults to \code{"bilinear"}.}

\item{antialias}{Whether to use an antialiasing filter when downsampling an
image. Defaults to \code{FALSE}.}

\item{data_format}{string, either \code{"channels_last"} or \code{"channels_first"}.
The ordering of the dimensions in the inputs. \code{"channels_last"}
corresponds to inputs with shape \verb{(batch, height, width, channels)}
while \code{"channels_first"} corresponds to inputs with shape
\verb{(batch, channels, height, weight)}. It defaults to the
\code{image_data_format} value found in your Keras config file at
\verb{~/.keras/keras.json}. If you never set it, then it will be
\code{"channels_last"}.}
}
\value{
Resized image or batch of images.
}
\description{
Resize images to size using the specified interpolation method.
}
\section{Examples}{
\if{html}{\out{<div class="sourceCode r">}}\preformatted{x <- random_uniform(c(2, 4, 4, 3)) # batch of 2 RGB images
y <- op_image_resize(x, c(2, 2))
shape(y)
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode">}}\preformatted{## shape(2, 2, 2, 3)
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{x <- random_uniform(c(4, 4, 3)) # single RGB image
y <- op_image_resize(x, c(2, 2))
shape(y)
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode">}}\preformatted{## shape(2, 2, 3)
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{x <- random_uniform(c(2, 3, 4, 4)) # batch of 2 RGB images
y <- op_image_resize(x, c(2, 2), data_format = "channels_first")
shape(y)
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode">}}\preformatted{## shape(2, 3, 2, 2)
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://keras.io/api/ops/image#resize-function}
}

Other image ops: 
\code{\link{op_image_affine_transform}()},
\code{\link{op_image_extract_patches}()},
\code{\link{op_image_map_coordinates}()},
\code{\link{op_image_pad_images}()}

Other image utils: 
\code{\link{image_array_save}()},
\code{\link{image_from_array}()},
\code{\link{image_load}()},
\code{\link{image_smart_resize}()},
\code{\link{image_to_array}()},
\code{\link{op_image_affine_transform}()},
\code{\link{op_image_extract_patches}()},
\code{\link{op_image_map_coordinates}()},
\code{\link{op_image_pad_images}()}

Other ops: 
\code{\link{op_abs}()},
\code{\link{op_add}()},
\code{\link{op_all}()},
\code{\link{op_amax}()},
\code{\link{op_amin}()},
\code{\link{op_any}()},
\code{\link{op_append}()},
\code{\link{op_arange}()},
\code{\link{op_arccosh}()},
\code{\link{op_arccos}()},
\code{\link{op_arcsinh}()},
\code{\link{op_arcsin}()},
\code{\link{op_arctan2}()},
\code{\link{op_arctanh}()},
\code{\link{op_arctan}()},
\code{\link{op_argmax}()},
\code{\link{op_argmin}()},
\code{\link{op_argsort}()},
\code{\link{op_array}()},
\code{\link{op_average_pool}()},
\code{\link{op_average}()},
\code{\link{op_binary_crossentropy}()},
\code{\link{op_bincount}()},
\code{\link{op_broadcast_to}()},
\code{\link{op_cast}()},
\code{\link{op_categorical_crossentropy}()},
\code{\link{op_ceil}()},
\code{\link{op_clip}()},
\code{\link{op_concatenate}()},
\code{\link{op_cond}()},
\code{\link{op_conj}()},
\code{\link{op_conv_transpose}()},
\code{\link{op_convert_to_numpy}()},
\code{\link{op_convert_to_tensor}()},
\code{\link{op_conv}()},
\code{\link{op_copy}()},
\code{\link{op_cosh}()},
\code{\link{op_cos}()},
\code{\link{op_count_nonzero}()},
\code{\link{op_cross}()},
\code{\link{op_cumprod}()},
\code{\link{op_cumsum}()},
\code{\link{op_depthwise_conv}()},
\code{\link{op_diagonal}()},
\code{\link{op_diag}()},
\code{\link{op_diff}()},
\code{\link{op_digitize}()},
\code{\link{op_divide}()},
\code{\link{op_dot}()},
\code{\link{op_einsum}()},
\code{\link{op_elu}()},
\code{\link{op_empty}()},
\code{\link{op_equal}()},
\code{\link{op_erf}()},
\code{\link{op_expand_dims}()},
\code{\link{op_expm1}()},
\code{\link{op_exp}()},
\code{\link{op_extract_sequences}()},
\code{\link{op_eye}()},
\code{\link{op_fft2}()},
\code{\link{op_fft}()},
\code{\link{op_flip}()},
\code{\link{op_floor_divide}()},
\code{\link{op_floor}()},
\code{\link{op_fori_loop}()},
\code{\link{op_full_like}()},
\code{\link{op_full}()},
\code{\link{op_gelu}()},
\code{\link{op_get_item}()},
\code{\link{op_greater_equal}()},
\code{\link{op_greater}()},
\code{\link{op_hard_sigmoid}()},
\code{\link{op_hstack}()},
\code{\link{op_identity}()},
\code{\link{op_image_affine_transform}()},
\code{\link{op_image_extract_patches}()},
\code{\link{op_image_map_coordinates}()},
\code{\link{op_image_pad_images}()},
\code{\link{op_imag}()},
\code{\link{op_in_top_k}()},
\code{\link{op_irfft}()},
\code{\link{op_is_tensor}()},
\code{\link{op_isclose}()},
\code{\link{op_isfinite}()},
\code{\link{op_isinf}()},
\code{\link{op_isnan}()},
\code{\link{op_istft}()},
\code{\link{op_leaky_relu}()},
\code{\link{op_less_equal}()},
\code{\link{op_less}()},
\code{\link{op_linspace}()},
\code{\link{op_log10}()},
\code{\link{op_log1p}()},
\code{\link{op_log2}()},
\code{\link{op_log_sigmoid}()},
\code{\link{op_log_softmax}()},
\code{\link{op_logaddexp}()},
\code{\link{op_logical_and}()},
\code{\link{op_logical_not}()},
\code{\link{op_logical_or}()},
\code{\link{op_logical_xor}()},
\code{\link{op_logspace}()},
\code{\link{op_logsumexp}()},
\code{\link{op_log}()},
\code{\link{op_matmul}()},
\code{\link{op_max_pool}()},
\code{\link{op_maximum}()},
\code{\link{op_max}()},
\code{\link{op_mean}()},
\code{\link{op_median}()},
\code{\link{op_meshgrid}()},
\code{\link{op_minimum}()},
\code{\link{op_min}()},
\code{\link{op_mod}()},
\code{\link{op_moments}()},
\code{\link{op_moveaxis}()},
\code{\link{op_multi_hot}()},
\code{\link{op_multiply}()},
\code{\link{op_nan_to_num}()},
\code{\link{op_ndim}()},
\code{\link{op_negative}()},
\code{\link{op_nonzero}()},
\code{\link{op_not_equal}()},
\code{\link{op_one_hot}()},
\code{\link{op_ones_like}()},
\code{\link{op_ones}()},
\code{\link{op_outer}()},
\code{\link{op_pad}()},
\code{\link{op_power}()},
\code{\link{op_prod}()},
\code{\link{op_qr}()},
\code{\link{op_quantile}()},
\code{\link{op_ravel}()},
\code{\link{op_real}()},
\code{\link{op_reciprocal}()},
\code{\link{op_relu6}()},
\code{\link{op_relu}()},
\code{\link{op_repeat}()},
\code{\link{op_reshape}()},
\code{\link{op_rfft}()},
\code{\link{op_roll}()},
\code{\link{op_round}()},
\code{\link{op_rsqrt}()},
\code{\link{op_scatter_update}()},
\code{\link{op_scatter}()},
\code{\link{op_segment_max}()},
\code{\link{op_segment_sum}()},
\code{\link{op_selu}()},
\code{\link{op_separable_conv}()},
\code{\link{op_shape}()},
\code{\link{op_sigmoid}()},
\code{\link{op_sign}()},
\code{\link{op_silu}()},
\code{\link{op_sinh}()},
\code{\link{op_sin}()},
\code{\link{op_size}()},
\code{\link{op_slice_update}()},
\code{\link{op_slice}()},
\code{\link{op_softmax}()},
\code{\link{op_softplus}()},
\code{\link{op_softsign}()},
\code{\link{op_solve}()},
\code{\link{op_sort}()},
\code{\link{op_sparse_categorical_crossentropy}()},
\code{\link{op_split}()},
\code{\link{op_sqrt}()},
\code{\link{op_square}()},
\code{\link{op_squeeze}()},
\code{\link{op_stack}()},
\code{\link{op_std}()},
\code{\link{op_stft}()},
\code{\link{op_stop_gradient}()},
\code{\link{op_subtract}()},
\code{\link{op_sum}()},
\code{\link{op_swapaxes}()},
\code{\link{op_take_along_axis}()},
\code{\link{op_take}()},
\code{\link{op_tanh}()},
\code{\link{op_tan}()},
\code{\link{op_tensordot}()},
\code{\link{op_tile}()},
\code{\link{op_top_k}()},
\code{\link{op_trace}()},
\code{\link{op_transpose}()},
\code{\link{op_tril}()},
\code{\link{op_triu}()},
\code{\link{op_tri}()},
\code{\link{op_unstack}()},
\code{\link{op_var}()},
\code{\link{op_vdot}()},
\code{\link{op_vectorized_map}()},
\code{\link{op_vstack}()},
\code{\link{op_where}()},
\code{\link{op_while_loop}()},
\code{\link{op_zeros_like}()},
\code{\link{op_zeros}()}
}
\concept{image ops}
\concept{image utils}
\concept{ops}
