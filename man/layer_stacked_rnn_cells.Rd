% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-layers-rnn.R
\name{layer_stacked_rnn_cells}
\alias{layer_stacked_rnn_cells}
\title{Wrapper allowing a stack of RNN cells to behave as a single cell.}
\usage{
layer_stacked_rnn_cells(cells, ...)
}
\arguments{
\item{cells}{List of RNN cell instances.}

\item{...}{Passed on to the Python callable}
}
\description{
Used to implement efficient stacked RNNs.
}
\section{Examples}{
\if{html}{\out{<div class="sourceCode python">}}\preformatted{batch_size = 3
sentence_length = 5
num_features = 2
new_shape = (batch_size, sentence_length, num_features)
x = np.reshape(np.arange(30), new_shape)

rnn_cells = [keras.layers.LSTMCell(128) for _ in range(2)]
stacked_lstm = keras.layers.StackedRNNCells(rnn_cells)
lstm_layer = keras.layers.RNN(stacked_lstm)

result = lstm_layer(x)
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/layers/StackedRNNCells}
}

Other recurrent layers: 
\code{\link{layer_bidirectional}()},
\code{\link{layer_conv_lstm_1d}()},
\code{\link{layer_conv_lstm_2d}()},
\code{\link{layer_conv_lstm_3d}()},
\code{\link{layer_gru_cell}()},
\code{\link{layer_gru}()},
\code{\link{layer_lstm_cell}()},
\code{\link{layer_lstm}()},
\code{\link{layer_rnn}()},
\code{\link{layer_simple_rnn_cell}()},
\code{\link{layer_simple_rnn}()},
\code{\link{layer_time_distributed}()}
}
\concept{recurrent layers}
