% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-metrics.R
\name{metric_huber}
\alias{metric_huber}
\title{Computes Huber loss value.}
\usage{
metric_huber(y_true, y_pred, delta = 1)
}
\arguments{
\item{y_true}{tensor of true targets.}

\item{y_pred}{tensor of predicted targets.}

\item{delta}{A float, the point where the Huber loss function changes from a
quadratic to linear. Defaults to \code{1.0}.}
}
\description{
Formula:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{for x in error:
    if abs(x) <= delta:
        loss.append(0.5 * x^2)
    elif abs(x) > delta:
        loss.append(delta * abs(x) - 0.5 * delta^2)

loss = mean(loss, axis=-1)
}\if{html}{\out{</div>}}

See: \href{https://en.wikipedia.org/wiki/Huber_loss}{Huber loss}.
}
\section{Examples}{
\if{html}{\out{<div class="sourceCode python">}}\preformatted{y_true = [[0, 1], [0, 0]]
y_pred = [[0.6, 0.4], [0.4, 0.6]]
loss = keras.losses.huber(y_true, y_pred)
# 0.155
}\if{html}{\out{</div>}}
}

\section{Returns}{
\if{html}{\out{<div class="sourceCode">}}\preformatted{Tensor with one scalar loss entry per sample.
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/metrics/huber}
}
}
