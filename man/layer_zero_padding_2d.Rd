% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-layers-reshaping.R, R/layers-reshaping.R
\name{layer_zero_padding_2d}
\alias{layer_zero_padding_2d}
\title{Zero-padding layer for 2D input (e.g. picture).}
\usage{
layer_zero_padding_2d(object, padding = list(1L, 1L), data_format = NULL, ...)

layer_zero_padding_2d(object, padding = list(1L, 1L), data_format = NULL, ...)
}
\arguments{
\item{padding}{Int, or tuple of 2 ints, or tuple of 2 tuples of 2 ints.
- If int: the same symmetric padding is applied to height and width.
- If tuple of 2 ints: interpreted as two different symmetric padding
values for height and width:
\verb{(symmetric_height_pad, symmetric_width_pad)}.
- If tuple of 2 tuples of 2 ints: interpreted as
\verb{((top_pad, bottom_pad), (left_pad, right_pad))}.}

\item{data_format}{A string, one of \code{"channels_last"} (default) or
\code{"channels_first"}. The ordering of the dimensions in the inputs.
\code{"channels_last"} corresponds to inputs with shape
\verb{(batch_size, height, width, channels)} while \code{"channels_first"}
corresponds to inputs with shape
\verb{(batch_size, channels, height, width)}.
When unspecified, uses \code{image_data_format} value found in your Keras
config file at \verb{~/.keras/keras.json} (if exists). Defaults to
\code{"channels_last"}.}
}
\description{
This layer can add rows and columns of zeros at the top, bottom, left and
right side of an image tensor.

This layer can add rows and columns of zeros at the top, bottom, left and
right side of an image tensor.
}
\section{Examples}{
\if{html}{\out{<div class="sourceCode python">}}\preformatted{input_shape = (1, 1, 2, 2)
x = np.arange(np.prod(input_shape)).reshape(input_shape)
x
# [[[[0 1]
#    [2 3]]]]
y = keras_core.layers.ZeroPadding2D(padding=1)(x)
y
# [[[[0 0]
#    [0 0]
#    [0 0]
#    [0 0]]
#   [[0 0]
#    [0 1]
#    [2 3]
#    [0 0]]
#   [[0 0]
#    [0 0]
#    [0 0]
#    [0 0]]]]
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode python">}}\preformatted{input_shape = (1, 1, 2, 2)
x = np.arange(np.prod(input_shape)).reshape(input_shape)
x
# [[[[0 1]
#    [2 3]]]]
y = keras_core.layers.ZeroPadding2D(padding=1)(x)
y
# [[[[0 0]
#    [0 0]
#    [0 0]
#    [0 0]]
#   [[0 0]
#    [0 1]
#    [2 3]
#    [0 0]]
#   [[0 0]
#    [0 0]
#    [0 0]
#    [0 0]]]]
}\if{html}{\out{</div>}}
}

\section{Input Shape}{
4D tensor with shape:
\itemize{
\item If \code{data_format} is \code{"channels_last"}:
\verb{(batch_size, height, width, channels)}
\item If \code{data_format} is \code{"channels_first"}:
\verb{(batch_size, channels, height, width)}
}

4D tensor with shape:
\itemize{
\item If \code{data_format} is \code{"channels_last"}:
\verb{(batch_size, height, width, channels)}
\item If \code{data_format} is \code{"channels_first"}:
\verb{(batch_size, channels, height, width)}
}
}

\section{Output Shape}{
4D tensor with shape:
\itemize{
\item If \code{data_format} is \code{"channels_last"}:
\verb{(batch_size, padded_height, padded_width, channels)}
\item If \code{data_format} is \code{"channels_first"}:
\verb{(batch_size, channels, padded_height, padded_width)}
}

4D tensor with shape:
\itemize{
\item If \code{data_format} is \code{"channels_last"}:
\verb{(batch_size, padded_height, padded_width, channels)}
\item If \code{data_format} is \code{"channels_first"}:
\verb{(batch_size, channels, padded_height, padded_width)}
}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/layers/ZeroPadding2D}
}

\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/layers/ZeroPadding2D}
}

Other reshaping layers: 
\code{\link{layer_cropping_1d}()},
\code{\link{layer_cropping_2d}()},
\code{\link{layer_cropping_3d}()},
\code{\link{layer_flatten}()},
\code{\link{layer_permute}()},
\code{\link{layer_repeat_vector}()},
\code{\link{layer_reshape}()},
\code{\link{layer_upsampling_1d}()},
\code{\link{layer_upsampling_2d}()},
\code{\link{layer_upsampling_3d}()},
\code{\link{layer_zero_padding_1d}()},
\code{\link{layer_zero_padding_3d}()}

Other reshaping layers: 
\code{\link{layer_cropping_1d}()},
\code{\link{layer_cropping_2d}()},
\code{\link{layer_cropping_3d}()},
\code{\link{layer_flatten}()},
\code{\link{layer_permute}()},
\code{\link{layer_repeat_vector}()},
\code{\link{layer_reshape}()},
\code{\link{layer_upsampling_1d}()},
\code{\link{layer_upsampling_2d}()},
\code{\link{layer_upsampling_3d}()},
\code{\link{layer_zero_padding_1d}()},
\code{\link{layer_zero_padding_3d}()}
}
\concept{reshaping layers}
