% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ops.R
\name{k_arange}
\alias{k_arange}
\title{Return evenly spaced values within a given interval.}
\usage{
k_arange(start, stop = NULL, step = 1L, dtype = NULL)
}
\arguments{
\item{start}{Integer or real, representing the start of the interval. The
interval includes this value.}

\item{stop}{Integer or real, representing the end of the interval. The
interval does not include this value, except in some cases where
\code{step} is not an integer and floating point round-off affects the
lenght of \code{out}. Defaults to \code{None}.}

\item{step}{Integer or real, represent the spacing between values. For any
output \code{out}, this is the distance between two adjacent values,
\code{out[i+1] - out[i]}. The default step size is 1. If \code{step} is
specified as a position argument, \code{start} must also be given.}

\item{dtype}{The type of the output array. If \code{dtype} is not given, infer the
data type from the other input arguments.}
}
\description{
\code{arange} can be called with a varying number of positional arguments:
\itemize{
\item \code{arange(stop)}: Values are generated within the half-open interval
\verb{[0, stop)} (in other words, the interval including start but excluding
stop).
\item \code{arange(start, stop)}: Values are generated within the half-open interval
\verb{[start, stop)}.
\item \code{arange(start, stop, step)}: Values are generated within the half-open
interval \verb{[start, stop)}, with spacing between values given by step.
}
}
\section{Returns}{
Tensor of evenly spaced values.
For floating point arguments, the length of the result is
\code{ceil((stop - start)/step)}. Because of floating point overflow, this
rule may result in the last element of out being greater than stop.
}

\section{Examples}{
\if{html}{\out{<div class="sourceCode python">}}\preformatted{keras_core.ops.arange(3)
# array([0, 1, 2], dtype=int32)
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode python">}}\preformatted{keras_core.ops.arange(3.0)
# array([0., 1., 2.], dtype=float32)
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode python">}}\preformatted{keras_core.ops.arange(3, 7)
# array([3, 4, 5, 6], dtype=int32)
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode python">}}\preformatted{keras_core.ops.arange(3, 7, 2)
# array([3, 5], dtype=int32)
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/ops/arange}
}
}
