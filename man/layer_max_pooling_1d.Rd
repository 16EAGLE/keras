% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-layers-pooling.R
\name{layer_max_pooling_1d}
\alias{layer_max_pooling_1d}
\title{Max pooling operation for 1D temporal data.}
\usage{
layer_max_pooling_1d(
  object,
  pool_size = 2L,
  strides = NULL,
  padding = "valid",
  data_format = NULL,
  name = NULL,
  ...
)
}
\arguments{
\item{object}{Object to compose the layer with. A tensor, array, or sequential model.}

\item{pool_size}{int, size of the max pooling window.}

\item{strides}{int or None. Specifies how much the pooling window moves
for each pooling step. If None, it will default to \code{pool_size}.}

\item{padding}{string, either \code{"valid"} or \code{"same"} (case-insensitive).
\code{"valid"} means no padding. \code{"same"} results in padding evenly to
the left/right or up/down of the input such that output has the same
height/width dimension as the input.}

\item{data_format}{string, either \code{"channels_last"} or \code{"channels_first"}.
The ordering of the dimensions in the inputs. \code{"channels_last"}
corresponds to inputs with shape \verb{(batch, steps, features)}
while \code{"channels_first"} corresponds to inputs with shape
\verb{(batch, features, steps)}. It defaults to the \code{image_data_format}
value found in your Keras config file at \verb{~/.keras/keras.json}.
If you never set it, then it will be \code{"channels_last"}.}

\item{name}{name for the layer}

\item{...}{Passed on to the Python callable}
}
\description{
Downsamples the input representation by taking the maximum value over a
spatial window of size \code{pool_size}. The window is shifted by \code{strides}.

The resulting output when using the \code{"valid"} padding option has a shape of:
\verb{output_shape = (input_shape - pool_size + 1) / strides)}.

The resulting output shape when using the \code{"same"} padding option is:
\code{output_shape = input_shape / strides}
}
\section{Input Shape}{
\itemize{
\item If \code{data_format="channels_last"}:
3D tensor with shape \verb{(batch_size, steps, features)}.
\item If \code{data_format="channels_first"}:
3D tensor with shape \verb{(batch_size, features, steps)}.
}
}

\section{Output Shape}{
\itemize{
\item If \code{data_format="channels_last"}:
3D tensor with shape \verb{(batch_size, downsampled_steps, features)}.
\item If \code{data_format="channels_first"}:
3D tensor with shape \verb{(batch_size, features, downsampled_steps)}.
}
}

\section{Examples}{
\code{strides=1} and \code{padding="valid"}:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{x = np.array([1., 2., 3., 4., 5.])
x = np.reshape(x, [1, 5, 1])
max_pool_1d = keras.layers.MaxPooling1D(pool_size=2,
   strides=1, padding="valid")
max_pool_1d(x)
}\if{html}{\out{</div>}}

\code{strides=2} and \code{padding="valid"}:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{x = np.array([1., 2., 3., 4., 5.])
x = np.reshape(x, [1, 5, 1])
max_pool_1d = keras.layers.MaxPooling1D(pool_size=2,
   strides=2, padding="valid")
max_pool_1d(x)
}\if{html}{\out{</div>}}

\code{strides=1} and \code{padding="same"}:

\if{html}{\out{<div class="sourceCode python">}}\preformatted{x = np.array([1., 2., 3., 4., 5.])
x = np.reshape(x, [1, 5, 1])
max_pool_1d = keras.layers.MaxPooling1D(pool_size=2,
   strides=1, padding="same")
max_pool_1d(x)
}\if{html}{\out{</div>}}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/layers/MaxPooling1D}
}

Other pooling layers: 
\code{\link{layer_average_pooling_1d}()},
\code{\link{layer_average_pooling_2d}()},
\code{\link{layer_average_pooling_3d}()},
\code{\link{layer_global_average_pooling_1d}()},
\code{\link{layer_global_average_pooling_2d}()},
\code{\link{layer_global_average_pooling_3d}()},
\code{\link{layer_global_max_pooling_1d}()},
\code{\link{layer_global_max_pooling_2d}()},
\code{\link{layer_global_max_pooling_3d}()},
\code{\link{layer_max_pooling_2d}()},
\code{\link{layer_max_pooling_3d}()}
}
\concept{pooling layers}
