% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autogen-layers-regularization.R
\name{layer_gaussian_noise}
\alias{layer_gaussian_noise}
\title{Apply additive zero-centered Gaussian noise.}
\usage{
layer_gaussian_noise(object, stddev, seed = NULL, ...)
}
\arguments{
\item{object}{Object to compose the layer with. A tensor, array, or sequential model.}

\item{stddev}{Float, standard deviation of the noise distribution.}

\item{seed}{Integer, optional random seed to enable deterministic behavior.}

\item{...}{Passed on to the Python callable}
}
\description{
This is useful to mitigate overfitting
(you could see it as a form of random data augmentation).
Gaussian Noise (GS) is a natural choice as corruption process
for real valued inputs.

As it is a regularization layer, it is only active at training time.
}
\section{Call Arguments}{
\itemize{
\item \code{inputs}: Input tensor (of any rank).
\item \code{training}: Python boolean indicating whether the layer should behave in
training mode (adding noise) or in inference mode (doing nothing).
}
}

\seealso{
\itemize{
\item \url{https://www.tensorflow.org/api_docs/python/tf/keras/layers/GaussianNoise}
}

Other regularization layers: 
\code{\link{layer_activity_regularization}()},
\code{\link{layer_dropout}()},
\code{\link{layer_gaussian_dropout}()},
\code{\link{layer_spatial_dropout_1d}()},
\code{\link{layer_spatial_dropout_2d}()},
\code{\link{layer_spatial_dropout_3d}()}
}
\concept{regularization layers}
