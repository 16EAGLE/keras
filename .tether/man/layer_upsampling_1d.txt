#' Upsampling layer for 1D inputs.
#'
#' @description
#' Repeats each temporal step `size` times along the time axis.
#'
#' # Examples
#' ```python
#' input_shape = (2, 2, 3)
#' x = np.arange(np.prod(input_shape)).reshape(input_shape)
#' x
#' # [[[ 0  1  2]
#' #   [ 3  4  5]]
#' #  [[ 6  7  8]
#' #   [ 9 10 11]]]
#' y = keras.layers.UpSampling1D(size=2)(x)
#' y
#' # [[[ 0.  1.  2.]
#' #   [ 0.  1.  2.]
#' #   [ 3.  4.  5.]
#' #   [ 3.  4.  5.]]
#' ```
#'
#'  `[[ 6.  7.  8.]`
#'   `[ 6.  7.  8.]`
#'   `[ 9. 10. 11.]`
#'   `[ 9. 10. 11.]]]`
#'
#' # Input Shape
#' 3D tensor with shape: `(batch_size, steps, features)`.
#'
#' # Output Shape
#'     3D tensor with shape: `(batch_size, upsampled_steps, features)`.
#'
#' @param size
#' Integer. Upsampling factor.
#'
#' @param object
#' Object to compose the layer with. A tensor, array, or sequential model.
#'
#' @param ...
#' For forward/backward compatability.
#'
#' @export
#' @family reshaping layers
#' @family layers
#' @seealso
#' + <https:/keras.io/api/layers/reshaping_layers/up_sampling1d#upsampling1d-class>
#' + <https://www.tensorflow.org/api_docs/python/tf/keras/layers/UpSampling1D>
layer_upsampling_1d <-
__signature__
keras.layers.UpSampling1D(size=2, **kwargs)
