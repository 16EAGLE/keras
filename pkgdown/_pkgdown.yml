
destination: website

template:
  params:
    bootswatch: cosmo

navbar:
  title: "Keras for R"
  type: inverse
  left:
    - text: "Home"
      href: index.html
    - text: "Tutorials"
      menu:
        - text: "Getting Started"
          href: articles/getting_started.html
        - text: "Basic Classification"
          href: articles/tutorial_basic_classification.html
        - text: "Text Classification"
          href: articles/tutorial_basic_text_classification.html
        - text: "Basic Regression"
          href: articles/tutorial_basic_regression.html
        - text: "Overfitting and Underfitting"
          href: articles/tutorial_overfit_underfit.html
        - text: "Save and Restore Models"
          href: articles/tutorial_save_and_restore.html
    - text: "Articles"
      menu:
        - text: "Guides (New for TF 2.6)"

        - text: "Python Subclasses"
          href: articles/new-guides/python_subclasses.html

        - text: "Making New Layers and Models via Subclassing"
          href: articles/new-guides/making_new_layers_and_models_via_subclassing.html

        - text: "Customizing What Happens in Fit"
          href: articles/new-guides/customizing_what_happens_in_fit.html

        - text: "Writing Your Own Callbacks"
          href: articles/new-guides/writing_your_own_callbacks.html

        - text: "Working with Preprocessing Layers"
          href: articles/new-guides/preprocessing_layers.html

        - text: "Working with RNNs"
          href: argicles/new-guides/working_with_rnns.html

        - text: "--------------------------"
        - text: "Using Keras"
        - text: "Guide to Keras Basics"
          href: articles/guide_keras.html
        - text: "Sequential Model in Depth"
          href: articles/sequential_model.html
        - text: "Functional API in Depth"
          href: articles/functional_api.html
        - text: "About Keras Models"
          href: articles/about_keras_models.html
        - text: "About Keras Layers"
          href: articles/about_keras_layers.html
        - text: "Training Visualization"
          href: articles/training_visualization.html
        - text: "Pre-Trained Models"
          href: articles/applications.html
        - text: "Frequently Asked Questions"
          href: articles/faq.html
        - text: "Why Use Keras?"
          href: articles/why_use_keras.html
        - text: "--------------------------"
        - text: "Advanced"
        - text: "Eager Execution"
          href: articles/eager_guide.html
        - text: "Training Callbacks"
          href: articles/training_callbacks.html
        - text: "Keras Backend"
          href: articles/backend.html
        - text: "Custom Layers"
          href: articles/custom_layers.html
        - text: "Custom Models"
          href: articles/custom_models.html
        - text: "Saving and serializing"
          href: articles/saving_serializing.html
    - text: Learn
      href: articles/learn.html
    - text: Tools
      href: articles/tools.html
    - text: Examples
      href: articles/examples/index.html
    - text: "Reference"
      href: reference/index.html
    - text: "News"
      href: news/index.html

reference:
  - title: "Keras Models"
    contents:
      - keras_model
      - keras_model_sequential
      - summary.keras.models.model.Model
      - compile.keras.models.model.Model
      - evaluate.keras.models.model.Model
      - export_savedmodel.keras.models.model.Model
      - fit.keras.models.model.Model
      - fit_generator
      - evaluate_generator
      - predict.keras.models.model.Model
      - predict_proba
      - predict_classes
      - predict_on_batch
      - predict_generator
      - train_on_batch
      - get_layer
      - pop_layer
      - save_model_hdf5
      - load_model_hdf5
      - serialize_model
      - clone_model
      - freeze_weights

  - title: "Core Layers"
    contents:
      - has_concept("core layers")

  - title: "reshaping Layers"
    contents:
      - has_concept("reshaping layers")

  - title: "Convolutional Layers"
    contents:
      - has_concept("convolutional layers")

  - title: "Pooling Layers"
    contents:
      - has_concept("pooling layers")

  - title: "Activation Layers"
    contents:
      - starts_with("layer_activation")

  - title: "Recurrent Layers"
    contents:
      - has_concept("recurrent layers")

  - title: "preprocessing Layers"
    contents:
      - has_concept("preprocessing layers")

  - title: "Attention Layers"
    contents:
      - has_concept("attention layers")

  - title: "Normalization Layers"
    contents:
      - has_concept("normalization layers")

  - title: "regularization Layers"
    contents:
      - has_concept("regularization layers")

  - title: "Merge Layers"
    contents:
      - has_concept("merging layers")


#
#   - title: "Noise Layers"
#     contents:
#       - layer_gaussian_noise
#       - layer_gaussian_dropout
#       - layer_alpha_dropout
#
#
#   - title: "Image Preprocessing Layers"
#     contents:
#       - layer_resizing
#       - layer_rescaling
#       - layer_center_crop
#
#   - title: "Image Augmentation Layers"
#     contents:
#       -  layer_random_contrast
#       -  layer_random_crop
#       -  layer_random_flip
#       -  layer_random_height
#       -  layer_random_rotation
#       -  layer_random_translation
#       -  layer_random_width
#       -  layer_random_zoom
#
#   - title: "Categorical Features Preprocessing"
#     contents:
#       -  layer_category_encoding
#       -  layer_hashing
#       -  layer_integer_lookup
#       -  layer_string_lookup
#
#   - title: "Numerical Features Preprocessing"
#     contents:
#       -  layer_normalization
#       -  layer_discretization
#
#   - title: "Attention Layers"
#     contents:
#       - layer_attention
#       - layer_multi_head_attention
#       - layer_additive_attention
#
#   - title: "Layer Wrappers"
#     contents:
#       - time_distributed
#       - bidirectional

  - title: "Layer Methods"
    contents:
      - get_config
      - get_weights
      - get_input_at
      - count_params
      - reset_states

  - title: "Custom Layers"
    contents:
      - "%py_class%"
      - Layer
      - create_layer_wrapper
      - create_layer

  - title: "Model Persistence"
    contents:
      - save_model_hdf5
      - save_model_weights_hdf5
      - serialize_model
      - get_weights
      - get_config
      - model_to_saved_model
      - model_from_saved_model
      - save_model_tf
      - save_model_weights_tf
      - model_to_json
      - model_to_yaml

  - title: "Datasets"
    contents:
      - starts_with("dataset_")

  - title: "Applications"
    contents:
      - starts_with("application_")
      # - imagenet_preprocess_input
      # - imagenet_decode_predictions
      # - mobilenet_preprocess_input
      # - mobilenet_decode_predictions


  - title: "Sequence Preprocessing"
    contents:
      - pad_sequences
      # - skipgrams
      # - make_sampling_table
      - timeseries_dataset_from_array

  - title: "Text Preprocessing"
    contents:
      - text_dataset_from_directory
      # - text_tokenizer
      # - fit_text_tokenizer
      # - save_text_tokenizer
      # - texts_to_sequences
      # - texts_to_sequences_generator
      # - texts_to_matrix
      # - sequences_to_matrix
      # - text_one_hot
      # - text_hashing_trick
      # - text_to_word_sequence
      # - layer_text_vectorization
      # - set_vocabulary
      # - get_vocabulary
      # - adapt

  - title: "Image Preprocessing"
    contents:
      - starts_with("image_")
      - starts_with("k_image_")
      # - image_data_generator
      # - fit_image_data_generator
      # - flow_images_from_data
      # - flow_images_from_directory
      # - flow_images_from_dataframe
      # - generator_next

  - title: "Optimizers"
    contents:
      - starts_with("optimizer")

  - title: "Learning Rate Schedules"
    contents:
      - starts_with("learning_rate_schedule_")
      - new_learning_rate_schedule_class

  - title: "Callbacks"
    contents:
      - starts_with("callback_")
      - KerasCallback

  - title: "Initializers"
    contents:
      - has_concept("initializer")

  - title: "Constraints"
    contents:
      - has_concept("constraint")
      - KerasConstraint

  - title: "Utils"
    contents:
      - has_concept("utils")
      - plot.keras_training_history
      - plot.keras.models.model.Model
      - zip_lists
      - mark_active
      - timeseries_generator
      - to_categorical
      - normalize
      - with_custom_object_scope
      - keras_array
      # - hdf5_matrix
      - get_file
      # - use_session_with_seed
      - install_keras
      - is_keras_available
      - backend
      - implementation
      - use_implementation
      - use_backend

  - title: "Losses"
    contents:
      - loss_mean_squared_error
      - starts_with("loss_")

  - title: "Metrics"
    contents:
      - Metric
      - starts_with("metric_")
      - custom_metric

  - title: "Regularizers"
    contents:
      - starts_with("regularizer")


  - title: "Activations"
    contents:
      - starts_with("activation")
      - activation_relu

  - title: "Misc other layers"
    contents:
      - starts_with("layer_")

  - title: "Random Tensors"
    contents:
      - starts_with("random")

  - title: "Operations"
    contents:
      - starts_with("k_")

  - title: "Configuration"
    contents:
      - starts_with("config_")

  - title: "Python"
    contents:
      - keras
      - "%py_class%"
      - "%<-active%"

  - title: "Deprecated"
    contents:
      - KerasLayer
      # - KerasWrapper
      # - create_wrapper
      # - loss_cosine_proximity
      # - layer_cudnn_gru
      # - layer_cudnn_lstm
      # - layer_dense_features
